@{
    ViewData["Title"] = "Timesheet";
}

<h1>Timesheet</h1>
<form onsubmit="submitUploadTemplate(event)" id="upload-template" class="row align-items-end my-3">
    <div class="form-group col-4">
        <label class="mb-3">Upload Template Timesheet</label>
        <input type="file" name="file" class="form-control" value="" />
    </div>
    <div class="col-4">
        <button type="submit" class="btn btn-primary">Upload</button>
        <a id="download-template" href="@Url.Content("~/Uploads/TemplateTimesheet.xlsx")" class="btn btn-success">Download Template</a>
    </div>
</form>
<div class="mb-4">
    <button data-bs-toggle="modal" data-bs-target="#modal-approver" id="generate-timesheet" class="btn btn-primary">Generate Timesheet</button>
    <button onclick="GetReport()" id="get-report" class="btn btn-warning">Get Report</button>
</div>
<div class="table-responsive">
    <table id="report" class="table table-striped table-bordered">
        <thead>
            <tr>
                <td>No</td>
                <td>Checkin</td>
                <td>Checkout</td>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<div class="modal fade" tabindex="-1" role="dialog" id="modal-approver">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Approver</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Diperiksa</label>
                    <input type="text" name="diperiksa" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Disetujui</label>
                    <input type="text" name="disetujui" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button onclick="GenerateTimesheet()" type="button" class="btn btn-primary">Generate</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        moment.locale("id-ID");
        $(document).ready(function () {
            $('.loader-container').show();
            $.ajax({
                url: "@Url.Content("~/Uploads/TemplateTimesheet.xlsx")",
                success: function () {
                    $("#download-template").attr("href", "@Url.Content("~/Uploads/TemplateTimesheet.xlsx")");
                    $("#download-template").show();
                    $('.loader-container').hide();

                },
                error: function () {
                    $("#download-template").attr("href", "#")
                    $("#download-template").hide();
                    $('.loader-container').hide();

                }
            });
            fetchData();
        });
        async function fetchData() {
            $('.loader-container').show();
            try {
                const res = await fetch("@Url.Content("~/Report/report.json")");
                const json = await res.json();
                let html = "";
                const data = json.data;
                const records = data.datalist;
                for (let i = 0; i < records.length; i++) {
                    const record = records[i];
                    const checkin = record.checkin ? moment(new Date(record.checkin)).format("LLLL") : null;
                    const checkout = record.checkout ? moment(new Date(record.checkout)).format("LLLL") : null;
                    html += `<tr>` +
                        `<td>${i + 1}</td>` +
                        `<td>${checkin}</td>` +
                        `<td>${checkout}</td>` +
                        `< /tr>`;

                }
                $("#report tbody").append(html);
                $("#report").DataTable();
            } catch (e) {
                console.error(e);
                $("#report").DataTable();
                $("#generate-timesheet").prop("disabled", true);
            } finally {
                $('.loader-container').hide();
            }
        }
        function submitUploadTemplate(e) {
            e = e.event || window.event;
            e.preventDefault();
            const form = e.console || e.srcElement;
            const formData = new FormData(form);
            const file = formData.get("file");
            if (!file || file.name == "" || file.size <= 0) {
                return Swal.fire("Validation Error", "File is must be provided", "error");

            }
            $('.loader-container').show();
            $.ajax({
                url: "/api/Timesheet/UploadTemplate",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (res) {
                    $('.loader-container').hide();
                    if (res.isSuccess) {
                        Swal.fire("Success", "Upload success", "success").then(() => location.reload());
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Upload failed",
                            html: `<h3>Error ${res.statusCode}</h3><p>${res.message}</p>`
                        })
                    }
                },
                error: function () {
                    Swal.fire("Error", "Upload Failed", "error");
                    $('.loader-container').hide();
                }
            });
        }
        function GetReport() {
            $('.loader-container').show();
            $('#get-report').prop("disabled", true);
            $.ajax({
                url: "/api/Timesheet/GetReport",
                type: "POST",
                success: function (res) {
                    $('.loader-container').hide();
                    $('#get-report').prop("disabled", false);
                    if (res.isSuccess) {
                        Swal.fire("Success", "Get Report success", "success").then(() => location.reload());
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Upload failed",
                            html: `<h3>Error ${res.statusCode}</h3><p>${res.message}</p>`
                        })
                    }
                },
                error: function () {
                    Swal.fire("Error", "Upload Failed", "error");
                    $('.loader-container').hide();
                    $('#get-report').prop("disabled", false);
                }
            });
        }
        async function GenerateTimesheet() {
            $('.loader-container').show();
            $("#generate-timesheet").prop("disabled", true);
            try {

                const diperiksa = $(":input[name=diperiksa]").val();
                const disetujui = $(":input[name=disetujui]").val();
                const res = await fetch("/api/Timesheet/GenerateTimesheet",
                    {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/json' // Set content type (adjust if needed)
                        },
                        body: JSON.stringify({ diperiksa, disetujui })
                    });
                if (!res.ok) {
                    throw new Error(`Error ${res.status}`);
                }
                const blob = await res.blob();
                const url = window.URL.createObjectURL(blob);
                const link = document.createElement('a');
                link.href = url;
                link.download = 'Timesheet.xlsx'; // Set desired filename
                link.click();
                // Optionally revoke the object URL after a delay to avoid memory leaks
                setTimeout(() => window.URL.revokeObjectURL(url), 5000);

            } catch (e) {
                console.error(e);
            } finally {
                $('.loader-container').hide();
                $("#generate-timesheet").prop("disabled", false);
            }
        }
    </script>
}
